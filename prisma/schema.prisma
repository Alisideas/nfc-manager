generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  username          String   @unique
  email             String   @unique
  hashedPassword    String?
  emailVerified     Boolean? @default(false) // Ensure this defaults to false
  verificationToken String?
  secretCode        String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  patients Patient[]
}

model Patient {
  userId                    String        @db.ObjectId
  user                      User          @relation(fields: [userId], references: [id])
  id                        String        @id @default(auto()) @map("_id") @db.ObjectId
  firstName                 String
  lastName                  String
  photoUrl                  String?
  idNumber                  String
  trackingId                String
  gender                    String
  age                       Int
  medicalHistory            String
  specificDesase            String
  insuranceType             String
  referredDoctor            String
  bodyPartAffected          String
  NumberOfBodyPartsAffected Int
  visitingType              String
  address                   String
  phoneNumber               String
  email                     String?
  relatedImages             String[]
  illness                   String
  nfcId                     String        @unique
  currentAppointment        DateTime?
  nextAppointment           DateTime?
  createdAt                 DateTime      @default(now())
  updatedAt                 DateTime      @updatedAt
  history                   Appointment[]
  comments                  Comment[]
  payments                  Payment[]
}

model Appointment {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  patientId   String   @db.ObjectId
  date        DateTime
  description String
  status      String // "upcoming", "completed"

  patient Patient @relation(fields: [patientId], references: [id])
}

model Comment {
  id        String   @id @default(cuid()) @map("_id")
  content   String
  createdAt DateTime @default(now())
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId String   @db.ObjectId
}

model Payment {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  patient     Patient  @relation(fields: [patientId], references: [id])
  patientId   String   @db.ObjectId
  amount      Float
  method      String
  description String
  status      String
  date        DateTime @default(now())
}
